

L’obiettivo del Makefile è:

Compilare ogni .cpp in .o (file oggetto).

Collegare tutti i .o in un eseguibile finale (compito).


BISOGNA CREARE UN FILE Makefile(scrito esattamente così) 

# Nome dell'eseguibile
TARGET = compito

# Compilatore e flags
CXX = g++
CXXFLAGS = -Wall -O2 -std=c++17

# File sorgenti
SRCS = compito.cpp grafo.cc tipo.cpp

# File oggetto corrispondenti
OBJS = $(SRCS:.cpp=.o)

# Regola principale: costruisce l'eseguibile
$(TARGET): $(OBJS)
	$(CXX) $(CXXFLAGS) -o $(TARGET) $(OBJS)

# Regole per compilare i .o dai .cpp
%.o: %.cpp
	$(CXX) $(CXXFLAGS) -c $< -o $@

# Pulizia dei file temporanei
clean:
	rm -f $(OBJS) $(TARGET)



//PER RUNNARLO BISOGAN FARE 

make       # compila tutto
./compito  # esegue il programma
make clean # pulisce file oggetto e eseguibile

nelle flags delle compilatore RIGA 27 posso anche aggiungerci -g per il debug 